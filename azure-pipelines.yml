trigger:
  - main

pool:
  name: 'Default' 

steps:
  - checkout: self

  # Confirmar Python
  - script: python --version
    displayName: "Verificar versão do Python"

  - script: pip install -r requirements.txt
    displayName: "Instalar dependências"

  - script: npm install -g snyk snyk-to-html
    displayName: "Instalar Snyk e conversor HTML"

  - script: |
      echo A correr Snyk e a gerar relatório JSON...
      snyk test --file=requirements.txt --json > snyk-report.json || exit 0
    env:
      SNYK_TOKEN: $(SNYK_TOKEN)
    displayName: "Correr Snyk e gerar relatório completo"
    
#####
    # Gera o resumo de severidade (Markdown)
  - script: |
      node -v
      echo Gerar resumo de severidade a partir do snyk-report.json...
      node metrics_severity.js snyk-report.json severity-summary.md
    displayName: "Calcular percentagens por severidade (Node)"

# Anexa o resumo ao Summary do pipeline
  - script: |
      echo ##vso[task.uploadsummary]severity-summary.md
    displayName: "Publicar resumo no Summary"

# (Opcional) Guardar também o markdown como artefacto
  - task: PublishBuildArtifacts@1
    inputs:
      pathToPublish: 'severity-summary.md'
      artifactName: 'snyk-metrics'
    displayName: "Publicar resumo de severidade (artefacto)"
######

  - script: |
      echo A verificar vulnerabilidades High/Critical...
      snyk test --file=requirements.txt --severity-threshold=high || exit 0
    env:
      SNYK_TOKEN: $(SNYK_TOKEN)
    displayName: "Verificar vulnerabilidades High/Critical"

  - script: snyk-to-html -i snyk-report.json -o snyk-report.html
    displayName: "Converter relatório em HTML"

  - task: SnykSecurityScan@1
    inputs:
      serviceConnectionEndpoint: 'Snyk report'
      testType: 'app'
      monitorWhen: 'always'
      failOnIssues: false


  - task: PublishBuildArtifacts@1
    inputs:
      pathToPublish: 'snyk-report.html'
      artifactName: 'snyk-html-report'
    displayName: "Guardar relatório HTML"

